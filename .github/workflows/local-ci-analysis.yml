# 文件路径: .github/workflows/local-ci-analysis.yml
# 描述: 这是一个为本地环境设计的CI工作流。

name: "本地CI与AI分析流水线"

on: [push, workflow_dispatch]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: "1. 拉取代码"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "2. 设置Java环境"
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: "3. 设置Gradle缓存"
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: "4. 运行测试并生成报告"
        id: run_tests
        continue-on-error: true
        env:
          GRADLE_OPTS: "-Dhttps.proxyHost=host.docker.internal -Dhttps.proxyPort=7890 -Dhttp.proxyHost=host.docker.internal -Dhttp.proxyPort=7890"
        run: |
          chmod +x ./gradlew
          ./gradlew test

      - name: "5. 🚀 AI分析失败原因 (仅在测试失败时运行)"
        if: steps.run_tests.outcome == 'failure'
        # 关键修正：为整个步骤设置代理环境变量，确保curl可以访问外部API。
        env:
          https_proxy: "http://host.docker.internal:7890"
          http_proxy: "http://host.docker.internal:7890"
          no_proxy: "localhost,127.0.0.1"
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          sed -i 's/\r$//' ./scripts/analyze_failure.sh
          chmod +x ./scripts/analyze_failure.sh
          ./scripts/analyze_failure.sh

      - name: "6. 📊 上报遥测数据到本地OpenSearch (总是运行)"
        if: always()
        run: |
          sed -i 's/\r$//' ./scripts/upload_telemetry.sh
          chmod +x ./scripts/upload_telemetry.sh
          ./scripts/upload_telemetry.sh

